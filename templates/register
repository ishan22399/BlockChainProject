<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register - Secure Exam System</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='css/style.css') }}">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">
</head>
<body class="auth-bg">
    {% with messages = get_flashed_messages(with_categories=true) %}
        {% if messages %}
            <div class="flash-messages">
                {% for category, message in messages %}
                    <div class="alert alert-{{ category }}">{{ message }}</div>
                {% endfor %}
            </div>
        {% endif %}
    {% endwith %}

    <div class="register-container">
        <div class="register-card">
            <h2>Register</h2>
            <p class="secure-text">
                <i class="bi bi-shield-check"></i> 
                Secured by Blockchain & Encryption
            </p>

            <form action="{{ url_for('register') }}" method="POST" class="register-form">
                <div class="form-group">
                    <label for="username">
                        <i class="bi bi-person-fill"></i> Username
                    </label>
                    <input type="text" id="username" name="username" required>
                </div>
                
                <div class="form-group">
                    <label for="password">
                        <i class="bi bi-lock-fill"></i> Password
                    </label>
                    <div class="password-input">
                        <input type="password" id="password" name="password" required>
                        <i class="bi bi-eye-slash" id="togglePassword"></i>
                    </div>
                    <div class="password-strength">
                        <div class="strength-meter" id="strength-meter">
                            <div class="strength-bar"></div>
                        </div>
                        <span id="strength-text">Password strength</span>
                    </div>
                </div>
                
                <div class="form-group">
                    <label>
                        <i class="bi bi-person-badge-fill"></i> Role
                    </label>
                    <!-- Hidden input that holds the actual value -->
                    <input type="hidden" name="role" id="selected-role" required>
                    
                    <div class="role-selector">
                        <div class="role-option" data-role="student" onclick="setRole('student', this)">
                            <i class="bi bi-mortarboard-fill"></i>
                            <span>Student</span>
                        </div>
                        <div class="role-option" data-role="admin" onclick="setRole('admin', this)">
                            <i class="bi bi-shield-lock-fill"></i>
                            <span>Admin</span>
                        </div>
                    </div>
                    <div id="role-error" class="error-message" style="color: #ff4d4d; display: none;">Please select a role</div>
                </div>
                
                <div class="form-group">
                    <button type="submit" class="btn-primary" onclick="return validateForm()">
                        <i class="bi bi-check2-circle"></i> Register
                    </button>
                </div>
                
                <div class="form-link">
                    <a href="{{ url_for('login') }}">Already have an account? Login</a>
                </div>
            </form>
        </div>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        // Password toggle functionality
        const passwordInput = document.getElementById('password');
        const togglePassword = document.getElementById('togglePassword');

        togglePassword.addEventListener('click', function() {
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            
            // Toggle eye icon
            this.classList.toggle('bi-eye');
            this.classList.toggle('bi-eye-slash');
        });

        // Password strength meter
        passwordInput.addEventListener('input', function() {
            const password = this.value;
            const strengthBar = document.querySelector('.strength-bar');
            const strengthText = document.getElementById('strength-text');
            
            let strength = 0;
            if (password.length > 6) strength += 20;
            if (password.length > 10) strength += 20;
            if (/[A-Z]/.test(password)) strength += 20;
            if (/[0-9]/.test(password)) strength += 20;
            if (/[^A-Za-z0-9]/.test(password)) strength += 20;
            
            strengthBar.style.width = strength + '%';
            
            if (strength < 40) {
                strengthBar.style.backgroundColor = '#ff4d4d';
                strengthText.textContent = 'Weak password';
            } else if (strength < 80) {
                strengthBar.style.backgroundColor = '#ffd633';
                strengthText.textContent = 'Medium strength';
            } else {
                strengthBar.style.backgroundColor = '#66cc66';
                strengthText.textContent = 'Strong password';
            }
        });
    });
    
    // Function to set the selected role
    function setRole(role, element) {
        // Set the hidden input value
        document.getElementById('selected-role').value = role;
        
        // Update the UI
        const options = document.querySelectorAll('.role-option');
        options.forEach(opt => opt.classList.remove('active'));
        element.classList.add('active');
        
        // Hide error message if shown
        document.getElementById('role-error').style.display = 'none';
        
        console.log('Role selected:', role);
    }
    
    // Function to validate the form before submission
    function validateForm() {
        const roleValue = document.getElementById('selected-role').value;
        
        if (!roleValue) {
            document.getElementById('role-error').style.display = 'block';
            return false;
        }
        
        return true;
    }
    </script>

    <style>
    /* Role selector styling */
    .role-selector {
        display: flex;
        gap: 20px;
        margin-top: 10px;
    }

    .role-option {
        flex: 1;
        padding: 15px;
        border: 2px solid #ddd;
        border-radius: 8px;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .role-option:hover {
        border-color: #3498db;
        background-color: rgba(52, 152, 219, 0.05);
    }

    .role-option.active {
        border-color: #3498db;
        background-color: rgba(52, 152, 219, 0.1);
        box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.15);
    }

    .role-option i {
        display: block;
        font-size: 24px;
        margin-bottom: 8px;
    }
    
    .error-message {
        margin-top: 5px;
        font-size: 14px;
    }
    
    /* Button styling */
    .btn-primary {
        width: 100%;
        padding: 12px;
        background-color: #3498db;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        transition: background-color 0.3s;
    }
    
    .btn-primary:hover {
        background-color: #2980b9;
    }
    </style>
</body>
</html>